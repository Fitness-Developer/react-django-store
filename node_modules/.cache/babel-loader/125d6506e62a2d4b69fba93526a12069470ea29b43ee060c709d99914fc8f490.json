{"ast":null,"code":"var _jsxFileName = \"C:\\\\\\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B \\u043F\\u043E \\u0444\\u0440\\u043E\\u043D\\u0442 js\\\\prakt_react\\\\my-site-react\\\\react-store\\\\src\\\\pages\\\\Order.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport '../index.scss';\nimport Card from '../components/Card';\nimport { useContext } from 'react';\nimport AppContext from '../AppContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Order = () => {\n  _s();\n  const {\n    items,\n    addToOrders,\n    orders\n  } = useContext(AppContext);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"content\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u041C\\u043E\\u0438 \\u043F\\u043E\\u043A\\u0443\\u043F\\u043A\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards\",\n      children: orders.map(get => {\n        const item = items.find(i => i.id === get.item); // Находим объект\n        if (!item) {\n          return null; // Или другой способ обработки отсутствующего объекта\n        }\n        return /*#__PURE__*/_jsxDEV(Card, {\n          item: item,\n          addToOrders: () => addToOrders(item.id)\n        }, get.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_s(Order, \"+LCMj+2N8xZzDKihFwbU55bGUpg=\");\n_c = Order;\nexport default Order;\nvar _c;\n$RefreshReg$(_c, \"Order\");","map":{"version":3,"names":["React","Card","useContext","AppContext","jsxDEV","_jsxDEV","Order","_s","items","addToOrders","orders","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","get","item","find","i","id","_c","$RefreshReg$"],"sources":["C:/проекты по фронт js/prakt_react/my-site-react/react-store/src/pages/Order.jsx"],"sourcesContent":["import React from 'react';\r\nimport '../index.scss';\r\nimport Card from '../components/Card';\r\nimport { useContext } from 'react';\r\nimport AppContext from '../AppContext';\r\n\r\nconst Order = () => {\r\n  const { items, addToOrders, orders } = useContext(AppContext);\r\n  return (\r\n    <section className=\"content\">\r\n      <h1>Мои покупки</h1>\r\n      <div className=\"cards\">\r\n        {orders.map((get) => {\r\n          const item = items.find((i) => i.id === get.item); // Находим объект\r\n          if (!item) {\r\n            return null; // Или другой способ обработки отсутствующего объекта\r\n          }\r\n          return <Card key={get.id} item={item} addToOrders={() => addToOrders(item.id)} />;\r\n        })}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Order;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,eAAe;AACtB,OAAOC,IAAI,MAAM,oBAAoB;AACrC,SAASC,UAAU,QAAQ,OAAO;AAClC,OAAOC,UAAU,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM;IAAEC,KAAK;IAAEC,WAAW;IAAEC;EAAO,CAAC,GAAGR,UAAU,CAACC,UAAU,CAAC;EAC7D,oBACEE,OAAA;IAASM,SAAS,EAAC,SAAS;IAAAC,QAAA,gBAC1BP,OAAA;MAAAO,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBX,OAAA;MAAKM,SAAS,EAAC,OAAO;MAAAC,QAAA,EACnBF,MAAM,CAACO,GAAG,CAAEC,GAAG,IAAK;QACnB,MAAMC,IAAI,GAAGX,KAAK,CAACY,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKJ,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC;QACnD,IAAI,CAACA,IAAI,EAAE;UACT,OAAO,IAAI,CAAC,CAAC;QACf;QACA,oBAAOd,OAAA,CAACJ,IAAI;UAAckB,IAAI,EAAEA,IAAK;UAACV,WAAW,EAAEA,CAAA,KAAMA,WAAW,CAACU,IAAI,CAACG,EAAE;QAAE,GAA5DJ,GAAG,CAACI,EAAE;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAwD,CAAC;MACnF,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEd,CAAC;AAACT,EAAA,CAhBID,KAAK;AAAAiB,EAAA,GAALjB,KAAK;AAkBX,eAAeA,KAAK;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}